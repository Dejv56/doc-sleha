<?xml version="1.0" encoding="UTF-8"?>
<sect1 xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" xml:base="ha_lb_haproxy.xml" xml:id="sec-ha-lb-haproxy" version="5.0">
 <title>Configuring Load Balancing with HAProxy</title>

 <info>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:translation>no</dm:translation>
      </dm:docmanager>
    </info>
    <remark>
  This is a straightforward explanation how to set up a HA openSUSE
  13.1 http load balancer, but not using SLE HA tools, but plain
  vanilla openSUSE with vi.
 </remark>

 <para>
  The following section gives an overview of the HAProxy and how to
  set up on High Availability. The load balancer distributes all requests to its
  back-end servers. It is configured as active/passive, meaning if one
  master fails, the slave becomes the master. In such a scenario, the user
  will not notice any interruption.
 </para>

 <para>
  In this section, we will use the following setup:
 </para>

 <itemizedlist>
  <listitem>
   <para>
    A load balancer, with the IP address
    <systemitem class="ipaddress">192.168.1.99</systemitem>.
   </para>
  </listitem>
  <listitem>
   <para>
    A virtual, floating IP address
    <systemitem class="ipaddress">192.168.1.99</systemitem>.
   </para>
  </listitem>
  <listitem>
   <para>
    Our servers (usually for Web content)
    <systemitem class="server">www.example1.com</systemitem> (IP:
    <systemitem class="ipaddress">192.168.1.200</systemitem>) and
    <systemitem class="server">www.example2.com</systemitem> (IP:
    <systemitem class="ipaddress">192.168.1.201</systemitem>)
   </para>
  </listitem>
 </itemizedlist>

 <para>
  To configure HAProxy, use the following procedure:
 </para>

 <procedure>
  <step>
   <para>
    Install the <package>haproxy</package> package.
   </para>
  </step>
  <step>
   <para>
    Create the file <filename>/etc/haproxy/haproxy.cfg</filename> with the
    following contents:
   </para>
   
   <remark>toms 2014-09-17: Not sure about all the options.</remark>
   <screen>global <co xml:id="co-ha-lb-global"/>
  maxconn 256
  daemon

defaults <co xml:id="co-ha-lb-defaults"/>
  log     global
  mode    http
  option  httplog
  option  dontlognull
  retries 3
  option redispatch
  maxconn 2000
  timeout connect   5000  <co xml:id="co-ha-lb-timeout-connect"/>
  timeout client    50s   <co xml:id="co-ha-lb-timeout-client"/>
  timeout server    50000 <co xml:id="co-ha-lb-timeout-server"/>

frontend LB
  bind 192.168.1.99:80 <co xml:id="co-ha-lb-listen"/>
  reqadd X-Forwarded-Proto:\ http
  default_backend LB

backend LB
  mode http
  stats enable
  stats hide-version
  stats uri /stats
  stats realm Haproxy\ Statistics
  stats auth haproxy:password	<co xml:id="co-ha-lb-stats-auth"/>
  balance roundrobin	<co xml:id="co-ha-lb-balance"/>
  option  httpclose
  option forwardfor
  cookie LB insert
  option httpchk GET /robots.txt HTTP/1.0
  server web1-srv 192.168.1.200:80 cookie web1-srv check
  server web2-srv 192.168.1.201:80 cookie web2-srv check</screen>
   <calloutlist>
    <callout arearefs="co-ha-lb-global">
     <para>
      Section which contains process-wide and OS-specific options.
     </para>
     <variablelist>
      <varlistentry>
       <term><option>maxconn</option>
       </term>
       <listitem>
        <para>
         Maximum per-process number of concurrent connections.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><option>daemon</option>
       </term>
       <listitem>
        <para>
         Recommended mode, HAProxy runs in the background.
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </callout>
    <callout arearefs="co-ha-lb-defaults">
     <para>
      Section which sets default parameters for all other sections
      following its declaration. Some important lines:
     </para>
     <variablelist>
      <varlistentry>
       <term><option>redispatch</option>
       </term>
       <listitem>
        <para>
         Enables or disables session redistribution in case of connection
         failure.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><option>log</option>
       </term>
       <listitem>
        <para>
         Enables logging of events and traffic.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><literal>mode http</literal>
       </term>
       <listitem>
        <para>
         Operates in HTTP mode (recommended mode for HAProxy). In this
         mode, a request will be analyzed before a connection to any server
         is performed. Request that are not RFC-compliant will be rejected.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><literal>option forwardfor</literal>
       </term>
       <listitem>
        <para>
         Adds the HTTP <option>X-Forwarded-For</option> header into the
         request. You need this option if you want to preserve the client's
         IP address.
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </callout>
    <callout arearefs="co-ha-lb-timeout-connect">
     <para>The maximum time to wait for a connection attempt to a server
      to succeed.
     </para>
    </callout>
    <callout arearefs="co-ha-lb-timeout-client">
     <para>The maximum time of inactivity on the client side.</para>
    </callout>
    <callout arearefs="co-ha-lb-timeout-server">
     <para>The maximum time of inactivity on the server side.</para>
    </callout>
    <callout arearefs="co-ha-lb-listen">
     <para>
      Section which combines front-end and back-end sections in one.
     </para>
     <variablelist>
      <varlistentry>
       <term><literal>balance leastconn</literal>
       </term>
       <listitem>
        <para>
         Defines the load balancing algorithm, see
         <link xlink:href="http://cbonte.github.io/haproxy-dconv/configuration-1.5.html#4-balance"/>.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><literal>stats enable</literal>
       </term>
       <term><literal>stats auth</literal>
       </term>
       <listitem>
        <para>
         Enables statistics reporting (by <literal>stats enable</literal>).
         The <option>auth</option> option logs statistics with
         authentication to a specific account.
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </callout>
    <callout arearefs="co-ha-lb-stats-auth">
      <para>
       Credentials for HAProxy Statistic report page.
      </para>
     </callout>
    <callout arearefs="co-ha-lb-balance">
      <para>
       Load balancing will work in a round-robin process.
      </para>
    </callout>
   </calloutlist>
  </step>
  <step>
   <para>
    Test your configuration file:
   </para>
   <screen><prompt role="root">root # </prompt><command>haproxy</command> -f /etc/haproxy/haproxy.cfg -c</screen>
  </step>
  <step>
   <para>
    Add the following line to Csync2's configuration file
    <filename>/etc/csync2/csync2.cfg</filename> to make sure the
    HAProxy configuration file is included:
   </para>
   <screen>include /etc/haproxy/haproxy.cfg</screen>
  </step>
  <step>
   <para>
    Synchronize it:
   </para>
   <screen><prompt role="root">root # </prompt><command>csync2</command> -f /etc/haproxy/haproxy.cfg
<prompt role="root">root # </prompt><command>csync2</command> -xv</screen>
   <note>
    <para>
     The Csync2 configuration part assumes that the HA nodes were
     configured using <command>ha-cluster-bootstrap</command>. For details,
     see the Installation and Setup Quick Start.
    </para>
   </note>
  </step>
  <step>
   <para>
    Make sure HAProxy is disabled on both load balancers
    (<systemitem class="server">alice</systemitem> and
    <systemitem class="server">bob</systemitem>) as it is started by
    Pacemaker:
   </para>
   <screen><prompt role="root">root # </prompt><command>systemctl</command> disable haproxy</screen>
  </step>
  <step>
   <para>
    Configure a new CIB:
   </para>
   <screen><prompt role="root">root # </prompt><command>crm</command> configure
<prompt role="custom">crm(live)# </prompt><command>cib</command> new haproxy-config
<prompt role="custom">crm(haproxy-config)# </prompt><command>primitive</command> haproxy systemd:haproxy \
    op start timeout=120 interval=0 \
    op stop timeout=120 interval=0 \
    op monitor timeout=100 interval=5s \
    meta target-role=Started
<prompt role="custom">crm(haproxy-config)# </prompt><command>primitive</command> vip IPaddr2 \
    params ip=192.168.1.99 nic=eth0 cidr_netmask=23 broadcast=192.168.1.255 \
    op monitor interval=5s timeout=120 on-fail=restart
<prompt role="custom">crm(haproxy-config)# </prompt><command>group</command> g-haproxy vip haproxy</screen>
  </step>
  <step>
   <para>
    Verify the new CIB and correct any errors:
   </para>
   <screen><prompt role="custom">crm(haproxy-config)# </prompt><command>verify</command></screen>
  </step>
  <step>
   <para>
    Commit the new CIB:
   </para>
   <screen><prompt role="custom">crm(haproxy-config)# </prompt><command>cib</command> use live
<prompt role="custom">crm(live)# </prompt><command>cib</command> commit haproxy-config</screen>
  </step>
 </procedure>
</sect1>
