<?xml version="1.0" encoding="UTF-8"?>
<sect1 xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="geo_booth_i.xml" version="5.0" xml:id="sec-ha-geo-booth">
 <title>ブースサービスの設定</title>

 <info>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:maintainer/>
        <dm:status>編集</dm:status>
        <dm:deadline/>
        <dm:priority/>
        <dm:translation>yes</dm:translation>
        <dm:languages/>
        <dm:release/>
        <dm:repository/>
      </dm:docmanager>
    </info>
    <para>
  デフォルトのブース設定は<filename>/etc/booth/booth.conf</filename>です。このファイルは、Geoクラスタのすべてのサイト(アービトレータを含む)上で同じである必要があります。すべてのサイトとアービトレータの間でブース設定を常に同期させるには、Csync2を使用します(<xref linkend="sec-ha-geo-booth-sync"/>を参照)。
 </para>

 <note xml:id="note-ha-geo-booth-ownership">
  <title><filename class="directory">/etc/booth</filename>およびファイルの所有権</title>
  <para>
   <filename class="directory">/etc/booth</filename>ディレクトリとこのディレクトリ内のすべてのファイルは、ユーザ<systemitem class="username">hacluster</systemitem>とグループ<systemitem class="groupname">haclient</systemitem>に属している必要があります。このディレクトリから新しいファイルをコピーする際は必ず、<command>cp</command>コマンドで<option>-p</option>オプションを使用して所有権を維持してください。または、新しいファイルを作成する際は、その後に<command>chown</command> <option>hacluster:haclient <replaceable>FILE</replaceable></option>を使用してユーザとグループを設定します。
  </para>
 </note>

 <para>
   複数のGeoクラスタを含むセットアップの場合は、同じアービトレータを<quote>共有</quote>できます(<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise High Availability Extension</phrase></phrase> 12以降)。複数のブース設定ファイルを提供することで、複数のブースインスタンスを同じアービトレータ上で開始することができ、それぞれのブースインスタンスを異なるポート上で動作させることができます。このようにすることで、「1台の」マシンを「複数の」Geoクラスタ用のアービトレータとして機能させることができます。<emphasis/><emphasis/>複数のGeoクラスタ向けにブースを設定する方法の詳細については、<xref linkend="sec-ha-geo-booth-multi"/>を参照してください。
 </para>
 
 
 <para>悪質なユーザによってブースサービスが妨害されることを防止するために、ブースと通信する際に共有鍵に基づいた認証を要求するように設定できます。詳細については、<xref linkend="co-ha-geo-booth-config-auth"/>内の<xref linkend="ex-ha-booth-conf-default"/>を参照してください。各種のブースサーバと通信するすべてのホストはこの鍵を必要とします。したがって、Csync2設定に鍵ファイルを含めるか、鍵ファイルをすべての関係先の間で手動で同期させる必要があります。</para>

 <sect2 xml:id="sec-ha-geo-booth-default">
  <title>デフォルトのブースセットアップ</title>
  <para>
   ブースに必要なすべてのパラメータを設定するには、ブース設定ファイルを手動で編集するか、YaSTの<guimenu>Geo Cluster (Geoクラスタ)</guimenu>モジュールを使用して編集します。このYaSTモジュールにアクセスするには、コマンドラインから<command>yast2 geo-cluster</command>コマンドを使用してこのモジュールを起動します(またはYaSTを起動して、<menuchoice> <guimenu>High Availability (高可用性)</guimenu> <guimenu>Geo Cluster (Geoクラスタ)</guimenu> </menuchoice>の順に選択します)。
  </para>
  <example xml:id="ex-ha-booth-conf-default">
   <title>ブース設定ファイル</title>

<screen><?dbsuse-fo font-size="0.75em"?>

transport = UDP <co xml:id="co-ha-geo-booth-config-transport"/>
port = 9929 <co xml:id="co-ha-geo-booth-config-port"/>
arbitrator = 147.2.207.14 <co xml:id="co-ha-geo-booth-config-arbitrator"/>
site =  192.168.201.151 <co xml:id="co-ha-geo-booth-config-site"/>
site =  192.168.202.151 <xref linkend="co-ha-geo-booth-config-site" xrefstyle="select:label nopage"/>
authfile = /etc/booth/authkey <co xml:id="co-ha-geo-booth-config-auth"/>
ticket = "ticket-nfs" <co xml:id="co-ha-geo-booth-config-ticket"/>
     expire = 600 <co xml:id="co-ha-geo-booth-config-expiry"/>
     timeout = 10 <co xml:id="co-ha-geo-booth-config-timeout"/>
     retries = 5 <co xml:id="co-ha-geo-booth-config-retries"/>
     renewal-freq = 30 <co xml:id="co-ha-geo-booth-config-renewal"/>
     before-acquire-handler<co xml:id="co-ha-geo-booth-config-handler"/> = /etc/booth/ticket-nfs<co xml:id="co-ha-geo-booth-config-script"/> ms_drbd_nfs<co xml:id="co-ha-geo-booth-config-rsc"/>
     acquire-after = 60 <co xml:id="co-ha-geo-booth-config-acquire-after"/>
ticket = "ticketA" <xref linkend="co-ha-geo-booth-config-ticket" xrefstyle="select:label nopage"/>
     expire = 600 <xref linkend="co-ha-geo-booth-config-expiry" xrefstyle="select:label nopage"/>
     timeout = 10 <xref linkend="co-ha-geo-booth-config-timeout" xrefstyle="select:label nopage"/>
     retries = 5 <xref linkend="co-ha-geo-booth-config-retries" xrefstyle="select:label nopage"/>
     renewal-freq = 30 <xref linkend="co-ha-geo-booth-config-renewal" xrefstyle="select:label nopage"/>
     before-acquire-handler<xref linkend="co-ha-geo-booth-config-handler" xrefstyle="select:label nopage"/> = /etc/booth/ticket-A<xref linkend="co-ha-geo-booth-config-script" xrefstyle="select:label nopage"/> db-1 <xref linkend="co-ha-geo-booth-config-rsc" xrefstyle="select:label nopage"/>
     acquire-after = 60 <xref linkend="co-ha-geo-booth-config-acquire-after" xrefstyle="select:label nopage"/>
ticket = "ticketB" <xref linkend="co-ha-geo-booth-config-ticket" xrefstyle="select:label nopage"/>
     expire = 600 <xref linkend="co-ha-geo-booth-config-expiry" xrefstyle="select:label nopage"/>
     timeout = 10 <xref linkend="co-ha-geo-booth-config-timeout" xrefstyle="select:label nopage"/>
     retries = 5 <xref linkend="co-ha-geo-booth-config-retries" xrefstyle="select:label nopage"/>
     renewal-freq = 30 <xref linkend="co-ha-geo-booth-config-renewal" xrefstyle="select:label nopage"/>
     before-acquire-handler<xref linkend="co-ha-geo-booth-config-handler" xrefstyle="select:label nopage"/> = /etc/booth/ticket-B<xref linkend="co-ha-geo-booth-config-script" xrefstyle="select:label nopage"/> db-8 <xref linkend="co-ha-geo-booth-config-rsc" xrefstyle="select:label nopage"/>
     acquire-after = 60 <xref linkend="co-ha-geo-booth-config-acquire-after" xrefstyle="select:label nopage"/>
    </screen>
   <calloutlist>
    <callout arearefs="co-ha-geo-booth-config-transport">
     <para>
      サイト間の通信に使用するトランスポートプロトコル。UDPのみがサポートされていますが、将来的には他のトランスポート層も追随する予定です。したがって、現時点ではこのパラメータは省略可能です。
     </para>
    </callout>
    <callout arearefs="co-ha-geo-booth-config-port">
     <para>
      各サイトのブースインスタンス間の通信用に使用されるポート。デフォルトポート(<literal>9929</literal>)を使用しない場合は、異なるサービス用にまだ使用されていないポートを選択してください。ノードおよびアービトレータのファイアウォールで必ずポートを解放します。ブースクライアントはTCPを使用して<systemitem class="daemon">boothd</systemitem>と通信します。ブースは常にUDPポートとTCPポートの両方をバインドおよびリッスンします。
     </para>
    </callout>
    <callout arearefs="co-ha-geo-booth-config-arbitrator">
     <para>
       アービトレータとして使用するマシンのIPアドレス。Geoクラスタのセットアップで使用するアービトレータごとに、エントリを追加します。
     </para>
    </callout>
    <callout arearefs="co-ha-geo-booth-config-site">
     <para>
      サイト上の<systemitem class="daemon">boothd</systemitem>用に使用されるIPアドレス。Geoクラスタのセットアップで使用するサイトごとに、エントリを追加します。各サイトの正しい仮想IPアドレス(<systemitem>IPaddr2</systemitem>)を挿入してください。そうしない場合、ブースメカニズムが正常に機能しません。ブース用の仮想IPアドレスを設定する方法の詳細については、<xref linkend="pro-ha-geo-setup-rsc-boothd"/>を参照してください。ブースは、IPv4アドレスとIPv6アドレスの両方に対応しています。

     </para>
    </callout>
    <callout arearefs="co-ha-geo-booth-config-auth">
     <para>
      このパラメータはオプションです。共有鍵に基づいてクライアントとサーバのブース認証を可能にします。このパラメータは、鍵ファイルのパスを指定します。 
     </para>
     <itemizedlist>
      <title>鍵の要件</title>
      <listitem>
       <para>鍵はバイナリでもテキストでもかまいません。</para>
       <para>鍵がテキストの場合は、先頭と末尾の空白、および改行文字は無視されます。</para>
      </listitem>
      <listitem>
       <para>鍵の長さは8文字から64文字の間である必要があります。</para>
      </listitem>
      <listitem>
        <para>鍵はユーザ<systemitem class="username">hacluster</systemitem>とグループ<systemitem class="groupname">haclient</systemitem>に属している必要があります。
        </para>
      </listitem>
      <listitem>
       <para>鍵は、その鍵ファイルの所有者のみが読み取り可能である必要があります。</para>
      </listitem>
     </itemizedlist>
    </callout>
    <callout arearefs="co-ha-geo-booth-config-ticket">
     <para>
      ブースによって管理されるチケット。各チケットで、<literal>ticket</literal>エントリを追加します。この例では、チケット<literal>ticket-nfs</literal>は、後でNFSとDRBDのフェールオーバー用に使用されます。詳細については、<xref linkend="sec-ha-geo-drbd"/>を参照してください。
     </para>
    </callout>
    <callout arearefs="co-ha-geo-booth-config-expiry">
     <para>
      このパラメータはオプションです。チケットの有効期限を秒単位で定義します。チケットを付与されたサイトは定期的にチケットを更新します。ブースが、指定された有効期限内にチケット更新に関する情報を受け取らない場合、チケットは取り消され、他のサイトに付与されます。有効期限が指定されていない場合、デフォルトでチケットは<literal>600</literal>秒後に期限切れになります。このパラメータを120秒未満の値に設定しないでください。
     </para>
    </callout>
    <callout arearefs="co-ha-geo-booth-config-timeout">
     <para>
      このパラメータはオプションです。タイムアウト期間を秒単位で指定します。この期間内に応答を受信できなかった場合、ブースはパケットを再送信します。他のブースメンバー(すべてのアービトレータとサイト)にパケットが届くのに十分な長さのタイムアウト期間を指定する必要があります。
     </para>
    </callout>
    <callout arearefs="co-ha-geo-booth-config-retries">
     <para>
      このパラメータはオプションです。ブースがパケットの送信を再試行する回数を指定します。この回数に達すると、ブースは他のサイトによる確認を待つことを放棄します。<literal>2</literal>以下の値は無効であり、その場合はブースは起動されなくなります。
     </para>
    </callout>
    <callout arearefs="co-ha-geo-booth-config-renewal">
     <para>
      このパラメータはオプションです。チケットの更新頻度期間を設定します。チケットの更新は、デフォルトでは有効期限の半分の時間ごとに行われます。ネットワークの信頼性が長期間の間に低下することが多い場合は、更新頻度を高くすることをお勧めします。毎回の更新前に、<literal>before-acquire-handler</literal>が実行されます。
     </para>
    </callout>
    <callout arearefs="co-ha-geo-booth-config-handler">
     <para>
      このパラメータはオプションです。このパラメータは1つ以上のスクリプトをサポートしています。複数のスクリプトを使用するためには、各スクリプトは異なるチェックを担当できます(たとえば、クラスタ状態、データセンターの接続性、環境正常性センサーなど)。すべてのスクリプトを<filename>/etc/booth.d/<replaceable>TICKET_NAME</replaceable></filename>ディレクトリに保管して、これらのスクリプトに正しい所有権(ユーザ<systemitem class="username">hacluster</systemitem>およびグループ<systemitem class="groupname">haclient</systemitem>)が設定されていることを確認します。このディレクトリ名をパラメータ <parameter>before-acquire-handler</parameter>の値として割り当てます。
     </para>
     <para>
      このディレクトリ内のスクリプトはアルファベット順に実行されます。すべてのスクリプトは、<systemitem class="daemon">boothd</systemitem>によってチケットの取得または更新が試行される前に呼び出されます。そのチケットが付与または更新されるためには、「すべての」スクリプトが正常に実行される必要があります。<emphasis/>セマンティクスは単一スクリプトの場合と同じです。すなわち、<literal>0</literal>以外の終了コードでは、<systemitem class="daemon">boothd</systemitem>はそのチケットを放棄します。
     </para>
    </callout>
    <callout arearefs="co-ha-geo-booth-config-script">
     <para>
      <filename>/usr/share/booth/service-runnable</filename>スクリプトは、サンプルとして製品に含まれています。このスクリプトを使用するには、このスクリプトをそれぞれの<quote>チケット</quote>ディレクトリにリンクします。
     </para>
     <screen><prompt role="root">root # </prompt><command>ln</command> -s /usr/share/booth/service-runnable /etc/booth.d/<replaceable>TICKET_NAME</replaceable></screen>
     <para>
      <filename>/etc/booth.d<replaceable>TICKET_NAME</replaceable></filename>ディレクトリに<command>service-runnable</command>スクリプトが含まれているとします。このシンプルなスクリプトは、<command>crm_simulate</command>をベースにしています。このスクリプトを使用して、特定のクラスタリソースを現在のクラスタサイト上で実行「できる」かどうかを判定できます。<emphasis/>すなわちこのスクリプトは、クラスタがそのリソースを実行できるだけの十分に正常な状態であるのかどうかを確認します(すべてのリソース依存関係が満たされているのか、クラスタパーティションにクォーラムが設定されているのか、ダーティノードがないのかなど)。たとえば、依存性チェーン内のサービスがすべての使用可能なノード上で<literal>INFINITY</literal>というfailcount値を保有している場合、そのサービスをそのサイトで実行することはできません。その場合は、そのチケットを要求することは無駄です。
     </para>
    </callout>
    <callout arearefs="co-ha-geo-booth-config-rsc">
     <para>
      <literal>before-acquire-handler</literal>(ここでは<filename>service-runnable</filename>スクリプト)によって判定されるリソース。それぞれのチケットによって保護されるリソースを参照する必要があります。この例では、リソース<literal>db-1</literal>は<literal>ticketA</literal>によって保護され、<literal>db-8</literal>は<literal>ticketB</literal>によって保護されます。DRBD(<literal>ms_drbd_nfs</literal>)のリソースはチケット<literal>ticket-nfs</literal>によって保護されます。
     </para>
    </callout>
    <callout arearefs="co-ha-geo-booth-config-acquire-after">
     <para>
      このパラメータはオプションです。チケットが失われた後、ブースはここで指定された時間だけさらに待ってから、そのチケットを取得します。これの目的は、そのチケットを失ったサイトが、リソースを停止するかノードをフェンスすることで、リソースを放棄可能にすることです。一般的な遅延時間としては<literal>60</literal>秒が考えられますが、最終的には保護されるリソースとフェンシング設定に依存します。デフォルトの設定は<literal>0</literal>です。
     </para>
     <para>
      リソースの停止や降格またはノードのフェンシングにかかる時間が不明な場合は(<literal>loss-policy</literal>に依存)、このパラメータを使用して、リソースが2つのサイトで同時に実行されることを防止してください。
     </para>
    </callout>
   </calloutlist>
  </example>
  <procedure xml:id="pro-ha-geo-setup-booth-config-edit">
   <title>ブース設定ファイルの手動編集</title>
   <step>
    <para>
     <systemitem class="username">root</systemitem>または同等の権限でクラスタノードにログインします。
    </para>
   </step>
   <step>
    <para>
     サンプルのブース設定ファイル<filename>/etc/booth/booth.conf.example</filename>を<filename>/etc/booth/booth.conf</filename>にコピーします。
    </para>
    <remark>toms 2016-08-09: "cp -p" is needed, see https://bugzilla.suse.com/show_bug.cgi?id=968865#c14</remark>
    <screen><prompt role="root">root # </prompt><command>cp</command> -p /etc/booth/booth.conf.example /etc/booth/booth.conf</screen>
   </step>
   <step>
    <para>
     <xref linkend="ex-ha-booth-conf-default"/>に従って<filename>/etc/booth/booth.conf</filename>を編集します。
    </para>
   </step>
   <step>
    <para>
     変更を検証して、ファイルを保存します。
    </para>
   </step>
   <step>
    <para>
     すべてのクラスタノードとアービトレータ上で、ブース用に設定したファイアウォール内のポートを開きます。<xref linkend="ex-ha-booth-conf-default"/>の<xref linkend="co-ha-geo-booth-config-port"/>の箇所を参照してください。
    </para>
   </step>
  </procedure>
  <procedure xml:id="pro-ha-geo-setup-booth-yast">
   <title>YaSTを使用したブースのセットアップ</title>
   <step>
    <para>
     <systemitem class="username">root</systemitem>または同等の権限でクラスタノードにログインします。
    </para>
   </step>
   <step>
    <para>
     YaSTの<guimenu>Geo Cluster (Geoクラスタ)</guimenu>モジュールを開始します。
    </para>
   </step>
   <step>
    <para>
     <guimenu>編集</guimenu>をクリックして既存のブース設定ファイルを編集するか、<guimenu>追加</guimenu>をクリックして新しいブース設定を作成します。
    </para>
    <substeps performance="required">
     <step xml:id="step-ha-booth-conf-params">
      <para>
       表示される画面で、以下のパラメータを設定します。
      </para>
      <itemizedlist>
       <listitem>
        <formalpara>
         <title>設定ファイル</title>
         <para>
          ブース設定ファイルの名前。YaSTによって提示されるデフォルトの名前は<literal>booth</literal>です。この結果として、ブース設定が<filename>/etc/booth/booth.conf</filename>に書き込まれます。<xref linkend="sec-ha-geo-booth-multi"/>の説明に従って別々のGeoクラスタ用に複数のブースインスタンスをセットアップする必要がある場合にのみ、この値を変更してください。
         </para>
        </formalpara>
       </listitem>
       <listitem>
        <formalpara>
         <title>トランスポート</title>
         <para>
          サイト間の通信に使用するトランスポートプロトコル。UDPのみがサポートされていますが、将来的には他のトランスポート層も追随する予定です。<xref linkend="ex-ha-booth-conf-default"/>の<xref linkend="co-ha-geo-booth-config-transport"/>の箇所も参照してください。
         </para>
        </formalpara>
       </listitem>
       <listitem>
        <formalpara>
         <title>ポート</title>
         <para>
          各サイトのブースインスタンス間の通信用に使用されるポート。<xref linkend="ex-ha-booth-conf-default"/>の<xref linkend="co-ha-geo-booth-config-port"/>の箇所も参照してください。
         </para>
        </formalpara>
       </listitem>
       <listitem>
        <formalpara>
         <title>アービトレータ</title>
         <para>
           アービトレータとして使用するマシンのIPアドレス。<xref linkend="ex-ha-booth-conf-default"/>の<xref linkend="co-ha-geo-booth-config-arbitrator"/>の箇所も参照してください。
         </para>
        </formalpara>
        <para>
         <guimenu>アービトレータ</guimenu>を指定するには、<guimenu>追加</guimenu>をクリックします。開かれるダイアログで、アービトレータのIPアドレスを入力して、<guimenu>OK</guimenu>をクリックします。
        </para>
       </listitem>
       <listitem>
        <formalpara>
         <title>サイト</title>
         <para>
          サイト上の<systemitem class="daemon">boothd</systemitem>用に使用されるIPアドレス。<xref linkend="ex-ha-booth-conf-default"/>の<xref linkend="co-ha-geo-booth-config-site"/>の箇所も参照してください。
         </para>
        </formalpara>
        <para>
         お使いのGeoクラスタの<guimenu>サイト</guimenu>を指定するには、<guimenu>追加</guimenu>をクリックします。開かれるダイアログで、1つのサイトのIPアドレスを入力して、<guimenu>OK</guimenu>をクリックします。
        </para>
       </listitem>
       <listitem>
        <formalpara>
         <title>チケット</title>
         <para>
          ブースによって管理されるチケット。<xref linkend="ex-ha-booth-conf-default"/>の<xref linkend="co-ha-geo-booth-config-ticket"/>の箇所も参照してください。
         </para>
        </formalpara>
        <para>
         <guimenu>チケット</guimenu>を指定するには、<guimenu>追加</guimenu>をクリックします。開かれるダイアログで、固有の<guimenu>チケット</guimenu>名を入力します。同じパラメータと値を使用した複数のチケットを設定する必要がある場合は、すべてのチケット用のデフォルトのパラメータと値を指定した<quote>チケットテンプレート</quote>を作成して、設定内容を保存します。そのためには、<literal>__default__</literal>を<guimenu>チケット</guimenu>名として使用します。
        </para>
       </listitem>
       <listitem>
        
        <formalpara>
         <title>認証</title>
         <para>ブースの認証を有効にするには、<guimenu>認証</guimenu>をクリックして、開かれるダイアログで、<guimenu>Enable Security Auth (セキュリティ認証を有効にする)</guimenu>をアクティブにします。既存の鍵がすでにある場合は、その鍵のパスとファイル名を<guimenu>Authentication file (認証鍵)</guimenu>に指定します。新しいGeoクラスタ用の鍵ファイルを生成するには、<guimenu>Generate Authentication Key File (認証鍵ファイルの生成)</guimenu>をクリックします。鍵が作成されて、<guimenu>Authentication file (認証ファイル)</guimenu>で指定された場所に書き込まれます。</para>
        </formalpara>
        <para>
         さらに、チケットに対してオプションのパラメータを指定できます。概要については、<xref linkend="ex-ha-booth-conf-default"/>の<xref linkend="co-ha-geo-booth-config-expiry"/>から<xref linkend="co-ha-geo-booth-config-acquire-after"/>の箇所を参照してください。
        </para>
        <para>
         [OK<guimenu>]をクリックして、変更を確認します。</guimenu>
        </para>
       </listitem>
      </itemizedlist>
      <figure xml:id="fig-yast2-ha-geo-booth">
       <title>サンプルのチケットの依存関係</title>
       <mediaobject>
        <imageobject role="fo">
         <imagedata fileref="yast2_geo_cluster_booth.png" width="80%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
         <imagedata fileref="yast2_geo_cluster_booth.png" width="50%" format="PNG"/>
        </imageobject>
       </mediaobject>
      </figure>
     </step>
     <step>
      <para>
       <guimenu>OK</guimenu>をクリックして現在のブース設定画面を閉じます。YaSTでは、作成されたブース設定ファイルの名前が表示されます。
      </para>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     YaSTモジュールを閉じる前に、<guimenu>Firewall Configuration (ファイアウォール設定)</guimenu>カテゴリに切り替えます。
    </para>
   </step>
   <step>
    <para>
     ブース用に設定したポートを開くには、<guimenu>Open Port in Firewall (ファイアウォール内のポートを開く)</guimenu>を有効にします。
    </para>
    <important>
     <title>ローカルマシン専用のファイアウォール設定</title>
     <para>
      ファイアウォール設定は現在のマシンのみに適用されます。ファイアウォール設定によって、<filename>/etc/booth/booth.conf</filename>または他のいずれかのブース設定ファイルで指定されたすべてのポートについてUDP/TCPポートが開かれます(<xref linkend="sec-ha-geo-booth-multi"/>を参照してください)。
     </para>
     <para>
      Geoクラスタセットアップの他のすべてのクラスタノード上およびアービトレータ上でそれぞれのポートを必ず開いてください。この操作は、手動で行うか、Csync2を使用して以下のファイルを同期させることで行います。
     </para>
     <itemizedlist>
      <listitem>
       <para>
        <filename>/etc/sysconfig/SuSEfirewall2</filename>
       </para>
      </listitem>
      <listitem>
       <para>
        <filename>/etc/sysconfig/SuSEfirewall2.d/services/booth</filename>
       </para>
      </listitem>
     </itemizedlist>
    </important>
   </step>
   <step>
    <para>
     <guimenu>Finish (完了)</guimenu>をクリックして、すべての設定を確定してYaSTモジュールを閉じます。<xref linkend="step-ha-booth-conf-params"/>で指定した<guimenu>Configuration File (設定ファイル)</guimenu>の<replaceable>NAME</replaceable>に応じて、設定は<filename>/etc/booth/<replaceable>NAME</replaceable>.conf</filename>に書き込まれます。
    </para>
   </step>
  </procedure>
 </sect2>

 <sect2 xml:id="sec-ha-geo-booth-multi">
  <title>複数のテナント用のブースセットアップ</title>

  <para>
    複数のGeoクラスタを含むセットアップの場合は、同じアービトレータを<quote>共有</quote>できます(<phrase role="productname"><phrase os="sles">SUSE Linux Enterprise High Availability Extension</phrase></phrase> 12以降)。複数のブース設定ファイルを提供することで、複数のブースインスタンスを同じアービトレータ上で開始することができ、それぞれのブースインスタンスを異なるポート上で動作させることができます。このようにすることで、「1台の」マシンを「複数の」Geoクラスタ用のアービトレータとして機能させることができます。<emphasis/><emphasis/>
  </para>
  <para>
   2つのGeoクラスタがあるとします。1つはEMEA(ヨーロッパ/中東/アフリカ)にあり、もう１つはアジア太平洋地域(APAC)にあります。
  </para>
  <para>
   両方のGeoクラスタ用に同じアービトレータを使用するには、<filename>/etc/booth</filename>ディレクトリ内に2つの設定ファイル<filename>/etc/booth/emea.conf</filename>および<filename>/etc/booth/apac.conf</filename>を作成します。これらの設定ファイル間の違いは、以下のパラメータのみにする必要があります。
  </para>
  <itemizedlist>
   <listitem>
    <para>
     ブースインスタンスの通信用に使用されるポート。
    </para>
   </listitem>
   <listitem>
    <para>
     このアービトレータが使用される対象となる個々のGeoクラスタに属しているサイト。
    </para>
   </listitem>
  </itemizedlist>
  <example xml:id="ex-ha-conf-booth-multi-1">
   <title><filename>/etc/booth/apac.conf</filename></title>
<screen><?dbsuse-fo font-size="0.75em"?>

transport = UDP <xref linkend="co-ha-geo-booth-config-transport" xrefstyle="select:label nopage"/>
port = 9133 <xref linkend="co-ha-geo-booth-config-port" xrefstyle="select:label nopage"/>
arbitrator = 147.2.207.14 <xref linkend="co-ha-geo-booth-config-arbitrator" xrefstyle="select:label nopage"/>
site = 192.168.2.254 <xref linkend="co-ha-geo-booth-config-site" xrefstyle="select:label nopage"/>
site = 192.168.1.112 <xref linkend="co-ha-geo-booth-config-site" xrefstyle="select:label nopage"/>
authfile = /etc/booth/authkey-apac <xref linkend="co-ha-geo-booth-config-auth" xrefstyle="select:label nopage"/>
ticket ="tkt-db-apac-intern" <xref linkend="co-ha-geo-booth-config-ticket"/>
     timeout = 10 
     retries = 5 
     renewal-freq = 60 
     before-acquire-handler<xref linkend="co-ha-geo-booth-config-handler" xrefstyle="select:label nopage"/> = /usr/share/booth/service-runnable<xref linkend="co-ha-geo-booth-config-script" xrefstyle="select:label nopage"/> db-apac-intern <xref linkend="co-ha-geo-booth-config-rsc" xrefstyle="select:label nopage"/> 
ticket = "tkt-db-apac-cust" <xref linkend="co-ha-geo-booth-config-ticket" xrefstyle="select:label nopage"/>
     timeout = 10 
     retries = 5 
     renewal-freq = 60 
     before-acquire-handler = /usr/share/booth/service-runnable db-apac-cust</screen>
  </example>
  <example xml:id="ex-ha-conf-booth-multi-2">
   <title><filename>/etc/booth/emea.conf</filename></title>
<screen><?dbsuse-fo font-size="0.75em"?>

transport = UDP <xref linkend="co-ha-geo-booth-config-transport" xrefstyle="select:label nopage"/>
port = 9150 <xref linkend="co-ha-geo-booth-config-port" xrefstyle="select:label nopage"/>
arbitrator = 147.2.207.14 <xref linkend="co-ha-geo-booth-config-arbitrator" xrefstyle="select:label nopage"/>
site = 192.168.201.151 <xref linkend="co-ha-geo-booth-config-site" xrefstyle="select:label nopage"/>
site = 192.168.202.151 <xref linkend="co-ha-geo-booth-config-site" xrefstyle="select:label nopage"/>
authfile = /etc/booth/authkey-emea <xref linkend="co-ha-geo-booth-config-auth" xrefstyle="select:label nopage"/>
ticket = "tkt-sap-crm" <xref linkend="co-ha-geo-booth-config-ticket"/>
     expire = 900 
     renewal-freq = 60 
     before-acquire-handler<xref linkend="co-ha-geo-booth-config-handler" xrefstyle="select:label nopage"/> = /usr/share/booth/service-runnable<xref linkend="co-ha-geo-booth-config-script" xrefstyle="select:label nopage"/> sap-crm <xref linkend="co-ha-geo-booth-config-rsc" xrefstyle="select:label nopage"/>
ticket = "tkt-sap-prod" <xref linkend="co-ha-geo-booth-config-ticket" xrefstyle="select:label nopage"/>
     expire = 600 
     renewal-freq = 60 
     before-acquire-handler = /usr/share/booth/service-runnable sap-prod</screen>
  </example>
  <calloutlist>
   <callout arearefs="co-ha-geo-booth-config-transport">
    <para>
     サイト間の通信に使用するトランスポートプロトコル。UDPのみがサポートされていますが、将来的には他のトランスポート層も追随する予定です。したがって、現時点ではこのパラメータは省略可能です。
    </para>
   </callout>
   <callout arearefs="co-ha-geo-booth-config-port">
    <para>
     各サイトのブースインスタンス間の通信用に使用されるポート。これらの設定ファイルでは、同じアービトレータ上の複数のブースインスタンスを開始可能にするために異なるポートが使用されます。
    </para>
   </callout>
   <callout arearefs="co-ha-geo-booth-config-arbitrator">
    <para>
      アービトレータとして使用するマシンのIPアドレス。上記の例では、異なるGeoクラスタ用に同じアービトレータを使用しています。
    </para>
   </callout>
   <callout arearefs="co-ha-geo-booth-config-site">
    <para>
     サイト上の<systemitem class="daemon">boothd</systemitem>用に使用されるIPアドレス。両方のブース設定ファイルで指定されているサイトは異なります。これらのサイトは2つの異なるGeoクラスタに属しているからです。
    </para>
   </callout>
   <callout arearefs="co-ha-geo-booth-config-auth">
    <para>
     このパラメータはオプションです。共有鍵に基づいてクライアントとサーバのブース認証を可能にします。このパラメータは、鍵ファイルのパスを指定します。テナントごとに異なる鍵ファイルを使用します。
    </para>
    <itemizedlist>
      <title>鍵の要件</title>
      <listitem>
       <para>鍵はバイナリでもテキストでもかまいません。</para>
       <para>鍵がテキストの場合は、先頭と末尾の空白、および改行文字は無視されます。</para>
      </listitem>
      <listitem>
       <para>鍵の長さは8文字から64文字の間である必要があります。</para>
      </listitem>
      <listitem>
        <para>鍵はユーザ<systemitem class="username">hacluster</systemitem>とグループ<systemitem class="groupname">haclient</systemitem>に属している必要があります。
        </para>
      </listitem>
      <listitem>
       <para>鍵は、その鍵ファイルの所有者のみが読み取り可能である必要があります。</para>
      </listitem>
     </itemizedlist>
   </callout>
   <callout arearefs="co-ha-geo-booth-config-ticket">
    <para>
     ブースによって管理されるチケット。理論的には、異なるブース設定ファイルで同じチケット名を指定できます。これらのチケットは、異なるブースインスタンスによって管理されている異なるGeoクラスタの一部であるため、干渉することはありません。ただし、上記の例で示すように、Geoクラスタごとに異なるチケット名を使用することをお勧めします(より適切な概要のために)。
    </para>
   </callout>
   <callout arearefs="co-ha-geo-booth-config-handler">
    <para>
     このパラメータはオプションです。このパラメータが設定されている場合は、指定されたコマンドが、<systemitem class="daemon">boothd</systemitem>によってチケットの取得または更新が試行される前に呼び出されます。<literal>0</literal>以外の終了コードでは、<systemitem class="daemon">boothd</systemitem>はそのチケットを放棄します。
    </para>
   </callout>
   <callout arearefs="co-ha-geo-booth-config-script">
    <para>
     ここで指定されている<filename>service-runnable</filename>スクリプトは、サンプルとして製品に含まれています。これは<command>crm_simulate</command>をベースにしたシンプルなスクリプトです。このスクリプトを使用して、特定のクラスタリソースを現在のクラスタサイト上で実行「できる」かどうかを判定できます。<emphasis/>すなわちこのスクリプトは、クラスタがそのリソースを実行できるだけの十分に正常な状態であるのかどうかを確認します(すべてのリソース依存関係が満たされているのか、クラスタパーティションにクォーラムが設定されているのか、ダーティノードがないのかなど)。たとえば、依存性チェーン内のサービスがすべての使用可能なノード上で<literal>INFINITY</literal>というfailcount値を保有している場合、そのサービスをそのサイトで実行することはできません。その場合は、そのチケットを要求することは無駄です。
    </para>
   </callout>
   <callout arearefs="co-ha-geo-booth-config-rsc">
    <para>
     <literal>before-acquire-handler</literal>(ここでは<filename>service-runnable</filename>スクリプト)によって判定されるリソース。それぞれのチケットによって保護されるリソースを参照する必要があります。
    </para>
   </callout>
  </calloutlist>
  <procedure>
   <title>異なるGeoクラスタに対する同じアービトレータの使用</title>
   <step>
    <para>
     <filename>/etc/booth</filename>内に複数の異なるブース設定ファイルを作成します(<xref linkend="ex-ha-conf-booth-multi-1"/>と<xref linkend="ex-ha-conf-booth-multi-2"/>を参照)。これらのファイルは、手動で作成するか、YaSTを使用して作成します(<xref linkend="pro-ha-geo-setup-booth-yast"/>を参照)。
    </para>
   </step>
   <step>
    <para>
     アービトレータ上で、<filename>/etc/booth</filename>内のいずれかのブース設定ファイルで指定されたポートを開きます。
    </para>
   </step>
   <step>
    <para>
     アービトレータが使用される対象である個別のGeoクラスタに属しているノード上で、それぞれのブースインスタンス用に使用されるポートを開きます。
    </para>
   </step>
   <step>
    <para>
     同じブース設定を使用するすべてのクラスタノードとアービトレータの間で、それぞれのブース設定ファイルを同期させます。詳細については、<xref linkend="sec-ha-geo-booth-sync"/>を参照してください。
    </para>
   </step>
   <step>
    <para>
     アービトレータ上で、マルチテナンシーセットアップ向けに個別のブースインスタンスを開始します(<xref linkend="vle-ha-geo-setup-booth-service-arbitrator"/>を参照)。
    </para>
   </step>
   <step>
    <para>
     個別のGeoクラスタ上で、ブースサービスを開始します(<xref linkend="vle-ha-geo-setup-booth-service-sites"/>を参照)。
    </para>
   </step>
  </procedure>
 </sect2>

 <sect2 xml:id="sec-ha-geo-booth-sync">
  <title>すべてのサイトとアービトレータに対するブース設定の同期</title>
  <note>
   <title>すべてのサイトとアービトレータ上で同じブース設定の使用</title>
   <para>
    ブースを正常に機能させるためには、同一Geoクラスタ内のすべてのクラスタノードとアービトレータが同じブース設定を使用する必要があります。
   </para>
   <para>
    Csync2を使用して、ブース設定を同期させることができます。詳細については、<xref linkend="sec-ha-geo-booth-sync-csync2-setup"/>および<xref linkend="sec-ha-geo-booth-sync-csync2-start"/>を参照してください。
   </para>
   <para>
    何らかのブース設定が変更された場合は、その変更内容に応じてすべての関連先で設定ファイルを更新して、ブースサービスを再起動してください(<xref linkend="sec-ha-geo-setup-booth-reconfig"/>を参照)。
   </para>
  </note>
 </sect2>

 <sect2 xml:id="sec-ha-geo-setup-booth-service">
  <title>ブースサービスの有効化と開始</title>
  <variablelist>
   <varlistentry xml:id="vle-ha-geo-setup-booth-service-sites">
    <term>クラスタサイト上のブースサービスの開始</term>
    <listitem>
     <para>
      各クラスタサイト用のブースサービスは、<xref linkend="pro-ha-geo-setup-rsc-boothd"/>で設定されたブースリソースグループによって管理されます。サイトあたり1つのブースサービスインスタンスを開始するには、各クラスタサイト上でそれぞれのブースリソースグループを開始します。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="vle-ha-geo-setup-booth-service-arbitrator">
    <term>アービトレータ上のブースサービスの開始</term>

    <listitem>
     <para>
      SUSE Linux Enterprise 12以降では、ブースアービトレータはsystemdによって管理されます。ユニットファイルの名前は<filename>booth@.service</filename>です。<literal>@</literal>は、パラメータを指定してこのサービスを実行できることを示しています。この場合は、パラメータは設定ファイル名です。
     </para>
     <para>
      アービトレータ上のブースサービスを「有効」にするには、次のコマンドを使用します。<emphasis/>
     </para>
<screen><prompt role="root">root # </prompt><command>systemctl</command> enable booth@booth</screen>
     <para>
      コマンドラインからサービスを有効にした後に、YaST Services Managerを使用してそのサービスを管理できます(そのサービスが無効化されていない場合)。サービスを無効化した場合は、次回にsystemdを再起動したときにYaSTのサービスリストからそのサービスが削除されます。
     </para>
     <para>
      ただし、ブースサービスを「開始」するためのコマンドは、ブースセットアップに応じて異なります。<emphasis/>
     </para>
     <itemizedlist>
      <listitem>
       <para>
        デフォルトのセットアップ(<xref linkend="sec-ha-geo-booth-default"/>を参照)を使用している場合は、<filename>/etc/booth/booth.conf</filename>のみが設定されます。その場合は、各アービトレータにログインして、次のコマンドを使用してください。
       </para>
<screen><prompt role="root">root # </prompt><command>systemctl</command> start booth@booth</screen>
      </listitem>
      <listitem>
       <para>
        ブースをマルチテナンシーモードで実行している場合は(<xref linkend="sec-ha-geo-booth-multi"/>を参照)、複数のブース設定ファイルを<filename>/etc/booth</filename>内で設定済みです。個別のブースインスタンス向けのサービスを開始するには<command>systemctl start booth@</command> <replaceable>NAME</replaceable>を使用します。ここで、<replaceable>NAME</replaceable>はそれぞれの設定ファイル<filename>/etc/booth/<replaceable>NAME</replaceable>.conf</filename>の名前です。
       </para>
       <para>
        たとえば、<filename>/etc/booth/emea.conf</filename>および<filename>/etc/booth/apac.conf</filename>というブース設定ファイルがある場合は、アービトレータにログインして、次のコマンドを実行します。
       </para>
<screen><prompt role="root">root # </prompt><command>systemctl</command> start booth@emea
<prompt role="root">root # </prompt><command>systemctl</command> start booth@apac</screen>
       <para>

       </para>
      </listitem>
     </itemizedlist>
     <para>
      これにより、ブースサービスがアービトレータモードで起動します。その他すべてのブースデーモンと通信できますが、クラスタサイトで実行するブースデーモンとは異なり、チケットは付与されません。ブースアービトレータは選択のみに参加します。それ以外については、ブースアービトレータは休止状態になります。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect2>

 <sect2 xml:id="sec-ha-geo-setup-booth-reconfig">
  <title>実行中のブースの再設定</title>

  <para>
   ブースサービスがすでに実行されている最中にブース設定を変更する必要がある場合は、以下の手順を実行します。
  </para>
  <procedure>
   <step>
    <para>
     希望に応じてブース設定ファイルを編集します。
    </para>
   </step>
   <step>
    <para>
     Geoクラスタの一部であるすべてのクラスタノードとアービトレータに対して、更新後のブース設定ファイルを同期させます。詳細については、<xref linkend="sec-ha-geo-sync"/>を参照してください。
    </para>
   </step>
   <step>

    <para>
     アービトレータ上とクラスタサイト上のブースサービスを再起動します(<xref linkend="sec-ha-geo-setup-booth-service"/>を参照)。この操作によって、サイトにすでに付与されているチケットが影響を受けることはありません。
    </para>
   </step>
  </procedure>
 </sect2>
</sect1>
