<?xml version="1.0" encoding="UTF-8"?>
<sect1 xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink" xml:base="geo_booth_i.xml" version="5.0" xml:id="sec-ha-geo-booth">
 <title>Einrichten der booth-Services</title>

 <info>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:maintainer/>
        <dm:status>Bearbeiten</dm:status>
        <dm:deadline/>
        <dm:priority/>
        <dm:translation>Ja</dm:translation>
        <dm:languages/>
        <dm:release/>
        <dm:repository/>
      </dm:docmanager>
    </info>
    <para>
  Die standardmäßige booth-Konfiguration lautet <filename>/etc/booth/booth.conf</filename>. Diese Datei muss auf allen Sites des GeoClusters, einschließlich des Vermittlers bzw. der Vermittler, identisch sein. Um die booth-Konfiguration zwischen allen Sites und Vermittlern synchron zu halten, verwenden Sie Csync2, wie in <xref linkend="sec-ha-geo-booth-sync"/> beschrieben.
 </para>

 <note xml:id="note-ha-geo-booth-ownership">
  <title>Eigentum an <filename class="directory">/etc/booth</filename> und den entsprechenden Dateien</title>
  <para>
   Eigentümer des Verzeichnisses <filename class="directory">/etc/booth</filename> und aller darin enthaltenen Dateien müssen der Benutzer <systemitem class="username">hacluster</systemitem> und die Gruppe <systemitem class="groupname">haclient</systemitem> sein. Verwenden Sie beim Kopieren einer neuen Datei aus diesem Verzeichnis immer die Option <option>-p</option> für das Kommando <command>cp</command>, um die Eigentümerschaft zu erhalten. Alternativ können Sie nach dem Erstellen einer neuen Datei den Benutzer und die Gruppe nachträglich mit <command>chown</command> <option>hacluster:haclient <replaceable>DATEI</replaceable></option> festlegen.
  </para>
 </note>

 <para>
   Für Einrichtungen, die mehrere GeoCluster enthalten, kann derselbe Vermittler <quote>gemeinsam genutzt</quote> werden (ab <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise High Availability Extension</phrase></phrase> 12). Durch Bereitstellen mehrerer booth-Konfigurationsdateien können Sie mehrere booth-Instanzen auf demselben Vermittler starten, wobei jede booth-Instanz auf einem anderen Port ausgeführt wird. Auf diese Weise können Sie <emphasis>einen</emphasis> Rechner als Vermittler für <emphasis>verschiedene</emphasis> GeoCluster verwenden. Weitere Informationen zum Konfigurieren von booth für mehrere GeoCluster finden Sie in <xref linkend="sec-ha-geo-booth-multi"/>.
 </para>
 
 
 <para>Zum Schutz vor böswilligen Unterbrechungen des booth-Service können Sie eine auf einem gemeinsamen Schlüssel basierende Authentifizierung für die Kommunikation mit booth konfigurieren. Weitere Informationen finden Sie unter <xref linkend="co-ha-geo-booth-config-auth"/> in <xref linkend="ex-ha-booth-conf-default"/>. Diesen Schlüssel benötigen dann alle Hosts, die mit verschiedenen booth-Servern kommunizieren. Stellen Sie daher sicher, dass die Schlüsseldatei in der Csync2-Konfiguration enthalten ist, oder synchronisieren Sie diese manuell zwischen allen beteiligten Rechnern.</para>

 <sect2 xml:id="sec-ha-geo-booth-default">
  <title>Standardeinrichtung von booth</title>
  <para>
   Zum Konfigurieren aller für booth erforderlichen Parameter können Sie entweder die booth-Konfigurationsdateien manuell bearbeiten oder das YaST-Modul <guimenu>GeoCluster</guimenu> verwenden. Auf dieses YaST-Modul greifen Sie über die Kommandozeile mit <command>yast2 geo-cluster</command> zu (oder starten Sie YaST und wählen Sie <menuchoice> <guimenu>Hohe Verfügbarkeit</guimenu> <guimenu>GeoCluster</guimenu> </menuchoice> aus).
  </para>
  <example xml:id="ex-ha-booth-conf-default">
   <title>Eine booth-Konfigurationsdatei</title>

<screen><?dbsuse-fo font-size="0.75em"?>

transport = UDP <co xml:id="co-ha-geo-booth-config-transport"/>
port = 9929 <co xml:id="co-ha-geo-booth-config-port"/>
arbitrator = 147.2.207.14 <co xml:id="co-ha-geo-booth-config-arbitrator"/>
site =  192.168.201.151 <co xml:id="co-ha-geo-booth-config-site"/>
site =  192.168.202.151 <xref linkend="co-ha-geo-booth-config-site" xrefstyle="select:label nopage"/>
authfile = /etc/booth/authkey <co xml:id="co-ha-geo-booth-config-auth"/>
ticket = "ticket-nfs" <co xml:id="co-ha-geo-booth-config-ticket"/>
     expire = 600 <co xml:id="co-ha-geo-booth-config-expiry"/>
     timeout = 10 <co xml:id="co-ha-geo-booth-config-timeout"/>
     retries = 5 <co xml:id="co-ha-geo-booth-config-retries"/>
     renewal-freq = 30 <co xml:id="co-ha-geo-booth-config-renewal"/>
     before-acquire-handler<co xml:id="co-ha-geo-booth-config-handler"/> = /etc/booth/ticket-nfs<co xml:id="co-ha-geo-booth-config-script"/> ms_drbd_nfs<co xml:id="co-ha-geo-booth-config-rsc"/>
     acquire-after = 60 <co xml:id="co-ha-geo-booth-config-acquire-after"/>
ticket = "ticketA" <xref linkend="co-ha-geo-booth-config-ticket" xrefstyle="select:label nopage"/>
     expire = 600 <xref linkend="co-ha-geo-booth-config-expiry" xrefstyle="select:label nopage"/>
     timeout = 10 <xref linkend="co-ha-geo-booth-config-timeout" xrefstyle="select:label nopage"/>
     retries = 5 <xref linkend="co-ha-geo-booth-config-retries" xrefstyle="select:label nopage"/>
     renewal-freq = 30 <xref linkend="co-ha-geo-booth-config-renewal" xrefstyle="select:label nopage"/>
     before-acquire-handler<xref linkend="co-ha-geo-booth-config-handler" xrefstyle="select:label nopage"/> = /etc/booth/ticket-A<xref linkend="co-ha-geo-booth-config-script" xrefstyle="select:label nopage"/> db-1 <xref linkend="co-ha-geo-booth-config-rsc" xrefstyle="select:label nopage"/>
     acquire-after = 60 <xref linkend="co-ha-geo-booth-config-acquire-after" xrefstyle="select:label nopage"/>
ticket = "ticketB" <xref linkend="co-ha-geo-booth-config-ticket" xrefstyle="select:label nopage"/>
     expire = 600 <xref linkend="co-ha-geo-booth-config-expiry" xrefstyle="select:label nopage"/>
     timeout = 10 <xref linkend="co-ha-geo-booth-config-timeout" xrefstyle="select:label nopage"/>
     retries = 5 <xref linkend="co-ha-geo-booth-config-retries" xrefstyle="select:label nopage"/>
     renewal-freq = 30 <xref linkend="co-ha-geo-booth-config-renewal" xrefstyle="select:label nopage"/>
     before-acquire-handler<xref linkend="co-ha-geo-booth-config-handler" xrefstyle="select:label nopage"/> = /etc/booth/ticket-B<xref linkend="co-ha-geo-booth-config-script" xrefstyle="select:label nopage"/> db-8 <xref linkend="co-ha-geo-booth-config-rsc" xrefstyle="select:label nopage"/>
     acquire-after = 60 <xref linkend="co-ha-geo-booth-config-acquire-after" xrefstyle="select:label nopage"/>
    </screen>
   <calloutlist>
    <callout arearefs="co-ha-geo-booth-config-transport">
     <para>
      Das für die Kommunikation zwischen den Sites verwendete Transportprotokoll. Nur UDP wird unterstützt, doch in Zukunft werden weitere Transportschichten hinzukommen. Zurzeit kann dieser Parameter daher ausgelassen werden.
     </para>
    </callout>
    <callout arearefs="co-ha-geo-booth-config-port">
     <para>
      Der für die Kommunikation zwischen den booth-Instanzen auf den einzelnen Sites zu verwendende Port. Wenn nicht der Standardport (<literal>9929</literal>) verwendet werden soll, wählen Sie einen Port aus, der noch nicht für andere Services verwendet wird. Öffnen Sie den Port in den Firewalls der Knoten und der Vermittler. Die booth-Clients verwenden TCP für die Kommunikation mit <systemitem class="daemon">boothd</systemitem>. booth wird immer sowohl an UDP- als auch an TCP-Ports gebunden und überwacht diese.
     </para>
    </callout>
    <callout arearefs="co-ha-geo-booth-config-arbitrator">
     <para>
       Die IP-Adresse des Rechners, der als Vermittler verwendet werden soll. Fügen Sie einen Eintrag für jeden in der GeoCluster-Einrichtung verwendeten Vermittler hinzu.
     </para>
    </callout>
    <callout arearefs="co-ha-geo-booth-config-site">
     <para>
      Die für <systemitem class="daemon">boothd</systemitem> auf einer Site verwendete IP-Adresse. Fügen Sie einen Eintrag für jede in der GeoCluster-Einrichtung verwendete Site hinzu. Achten Sie darauf, immer die richtigen virtuellen IP-Adressen (<systemitem>IPaddr2</systemitem>) für die einzelnen Sites zu verwenden. Andernfalls arbeitet der booth-Mechanismus nicht korrekt. Informationen zum Konfigurieren der virtuellen IP-Adressen für booth finden Sie in <xref linkend="pro-ha-geo-setup-rsc-boothd"/>. booth unterstützt sowohl IPv4- als auch IPv6-Adressen.

     </para>
    </callout>
    <callout arearefs="co-ha-geo-booth-config-auth">
     <para>
      Optionaler Parameter. Aktiviert die booth-Authentifizierung für Clients und Server auf Basis eines gemeinsamen Schlüssels. Dieser Parameter gibt den Pfad zu der Schlüsseldatei an. 
     </para>
     <itemizedlist>
      <title>Wichtige Anforderungen</title>
      <listitem>
       <para>Bei dem Schlüssel kann es sich um eine Binär- oder eine Textdatei handeln.</para>
       <para>Beim Textformat werden die folgenden Zeichen ignoriert: voran- und nachgestelltes Leerzeichen, Zeilenendemarken.</para>
      </listitem>
      <listitem>
       <para>Der Schlüssel muss zwischen 8 und 64 Zeichen lang sein.</para>
      </listitem>
      <listitem>
        <para>Der Schlüssel muss Eigentum des Benutzers <systemitem class="username">hacluster</systemitem> und der Gruppe <systemitem class="groupname">haclient</systemitem> sein.
        </para>
      </listitem>
      <listitem>
       <para>Der Schlüssel darf nur für den Eigentümer der Datei lesbar sein.</para>
      </listitem>
     </itemizedlist>
    </callout>
    <callout arearefs="co-ha-geo-booth-config-ticket">
     <para>
      Das Ticket, das von booth verwaltet werden soll. Fügen Sie für jedes Ticket einen <literal>ticket</literal>-Eintrag hinzu. In diesem Beispiel wird das Ticket <literal>ticket-nfs</literal> künftig für den Failover von NFS und DRBD verwendet. Weitere Informationen finden Sie in <xref linkend="sec-ha-geo-drbd"/>.
     </para>
    </callout>
    <callout arearefs="co-ha-geo-booth-config-expiry">
     <para>
      Optionaler Parameter. Definiert die Ablaufzeit des Tickets in Sekunden. Eine Site, der ein Ticket gewährt wurde, erneuert dieses regelmäßig. Wenn booth innerhalb der festgelegten Ablaufzeit keine Informationen zur Erneuerung des Tickets empfängt, wird das Ticket zurückgezogen und einer anderen Site gewährt. Ist keine Ablaufzeit angegeben, läuft das Ticket standardmäßig nach <literal>600</literal> Sekunden ab. Dieser Parameter sollte nicht auf einen Wert unter 120 Sekunden festgelegt werden.
     </para>
    </callout>
    <callout arearefs="co-ha-geo-booth-config-timeout">
     <para>
      Optionaler Parameter. Definiert einen Zeitüberschreitungszeitraum in Sekunden. Wenn nach Ablauf dieser Zeit keine Antwort empfangen wurde, sendet booth Pakete neu. Der festgelegte Zeitraum für die Zeitüberschreitung sollte so lang sein, dass Pakete andere booth-Mitglieder erreichen können (alle Vermittler und Sites).
     </para>
    </callout>
    <callout arearefs="co-ha-geo-booth-config-retries">
     <para>
      Optionaler Parameter. Legt fest, wie oft booth erneut versucht, Pakete zu senden, bevor das Warten auf Bestätigungen anderer Sites eingestellt wird. Werte unter <literal>3</literal> sind ungültig und verhindern, dass booth gestartet wird.
     </para>
    </callout>
    <callout arearefs="co-ha-geo-booth-config-renewal">
     <para>
      Optionaler Parameter. Legt fest, wie häufig das Ticket erneuert wird. Standardmäßig werden Tickets jeweils nach der Hälfte der Ablaufzeit erneuert. Wenn die Zuverlässigkeit des Netzwerks häufig über längere Zeit eingeschränkt ist, empfiehlt sich eine häufigere Erneuerung. Vor jeder Erneuerung wird die Vor-Erfassung-Routine (<literal>before-acquire-handler</literal>) ausgeführt.
     </para>
    </callout>
    <callout arearefs="co-ha-geo-booth-config-handler">
     <para>
      Optionaler Parameter. Hier wird mindestens ein Skript unterstützt. Wenn mehrere Skripte verwendet werden, kann jedes Skript für unterschiedliche Prüfungen zuständig sein, z. B. die Prüfung des Cluster-Status, der Rechenzentrumskonnektivität oder der Umgebungszustandssensoren. Speichern Sie alle Skripte im Verzeichnis <filename>/etc/booth.d/<replaceable>TICKET_NAME</replaceable></filename> und stellen Sie sicher, dass die richtigen Eigentümer erfasst sind (Benutzer <systemitem class="username">hacluster</systemitem> und Gruppe <systemitem class="groupname">haclient</systemitem>). Weisen Sie dem Parameter <parameter>before-acquire-handler</parameter>den Verzeichnisnamen als Wert zu.
     </para>
     <para>
      Die Skripte in diesem Verzeichnis werden in alphabetischer Reihenfolge ausgeführt. Alle Skripte werden aufgerufen, bevor <systemitem class="daemon">boothd</systemitem> versucht, ein Ticket zu beziehen oder zu erneuern. Damit das Ticket gewährt oder erneuert werden kann, müssen <emphasis>alle</emphasis> Skripte erfolgreich ausgeführt werden. Die Semantik ist dieselbe wie für ein einzelnes Skript: Bei einem anderen Beendigungscode als <literal>0</literal> gibt <systemitem class="daemon">boothd</systemitem> das Ticket frei.
     </para>
    </callout>
    <callout arearefs="co-ha-geo-booth-config-script">
     <para>
      Das Skript <filename>/usr/share/booth/service-runnable</filename> ist als Beispiel im Produkt enthalten. Um dieses zu verwenden, verbinden Sie es mit dem entsprechenden <quote>Ticket</quote>-Verzeichnis:
     </para>
     <screen><prompt role="root">root # </prompt><command>ln</command> -s /usr/share/booth/service-runnable /etc/booth.d/<replaceable>TICKET_NAME</replaceable></screen>
     <para>
      Angenommen, das Verzeichnis <filename>/etc/booth.d<replaceable>TICKET_NAME</replaceable></filename> enthält das Skript <command>service-runnable</command>. Dieses einfache Skript basiert auf <command>crm_simulate</command>. Sie können damit testen, ob eine bestimmte Cluster-Ressource auf der aktuellen Cluster-Site ausgeführt werden <emphasis>kann</emphasis>. Es wird also geprüft, ob der Zustand des Clusters die Ausführung der Ressource zulässt (ob alle Ressourcenabhängigkeiten erfüllt sind, ob die Cluster-Partition ein Quorum aufweist, ob keine veränderten Knoten (Dirty-Knoten) vorhanden sind usw.). Wenn z. B. ein Service in der Abhängigkeitskette auf allen verfügbaren Knoten eine Fehleranzahl von <literal>INFINITY</literal> aufweist, kann der Service auf dieser Site nicht ausgeführt werden. In diesem Fall ist die Beanspruchung des Tickets sinnlos.
     </para>
    </callout>
    <callout arearefs="co-ha-geo-booth-config-rsc">
     <para>
      Die von der Vor-Erfassung-Routine (<literal>before-acquire-handler</literal>) zu testende Ressource (in diesem Fall mit dem Skript <filename>service-runnable</filename>). Sie müssen Bezug auf die Ressource nehmen, die durch das betreffende Ticket geschützt ist. In diesem Beispiel ist die Ressource <literal>db-1</literal> durch <literal>ticketA</literal> geschützt, <literal>db-8</literal> hingegen durch <literal>ticketB</literal>. Die Ressource für DRBD (<literal>ms_drbd_nfs</literal>) ist durch das Ticket <literal>ticket-nfs</literal> geschützt.
     </para>
    </callout>
    <callout arearefs="co-ha-geo-booth-config-acquire-after">
     <para>
      Optionaler Parameter. Wenn ein Ticket verloren gegangen ist, wartet booth zusätzlich so lange, wie hier angegeben, bevor das Ticket bezogen wird. Damit wird der Site, die das Ticket verloren hat, Zeit gegeben, um die Ressourcen freizugeben. Dies kann entweder durch Stoppen der Ressourcen oder durch Eingrenzung (Fencing) eines Knotens geschehen. Eine typische Verzögerung liegt bei <literal>60</literal> Sekunden, doch letztlich hängt sie von den geschützten Ressourcen und von der Fencing-Konfiguration ab. Der Standardwert ist <literal>0</literal>.
     </para>
     <para>
      Wenn Sie sich unsicher sind, wie lange es dauert, die Ressourcen zu stoppen oder herabzustufen oder ein Knoten-Fencing zu implementieren (abhängig von der Verlustrichtlinie (<literal>loss-policy</literal>)), verwenden Sie diesen Parameter, um zu verhindern, dass Ressourcen auf zwei Sites gleichzeitig ausgeführt werden.
     </para>
    </callout>
   </calloutlist>
  </example>
  <procedure xml:id="pro-ha-geo-setup-booth-config-edit">
   <title>booth-Konfigurationsdatei manuell bearbeiten</title>
   <step>
    <para>
     Melden Sie sich als <systemitem class="username">root</systemitem> oder gleichwertiger Benutzer bei einem Cluster-Knoten an.
    </para>
   </step>
   <step>
    <para>
     Kopieren Sie die als Beispiel bereitgestellte booth-Konfigurationsdatei <filename>/etc/booth/booth.conf.example</filename> in <filename>/etc/booth/booth.conf</filename>:
    </para>
    <remark>toms 2016-08-09: "cp -p" is needed, see https://bugzilla.suse.com/show_bug.cgi?id=968865#c14</remark>
    <screen><prompt role="root">root # </prompt><command>cp</command> -p /etc/booth/booth.conf.example /etc/booth/booth.conf</screen>
   </step>
   <step>
    <para>
     Bearbeiten Sie <filename>/etc/booth/booth.conf</filename> gemäß <xref linkend="ex-ha-booth-conf-default"/>.
    </para>
   </step>
   <step>
    <para>
     Überprüfen Sie die vorgenommenen Änderungen und speichern Sie die Datei.
    </para>
   </step>
   <step>
    <para>
     Öffnen Sie auf allen Cluster-Knoten und Vermittlern den für booth konfigurierten Port in der Firewall. Siehe <xref linkend="ex-ha-booth-conf-default"/>, Position <xref linkend="co-ha-geo-booth-config-port"/>.
    </para>
   </step>
  </procedure>
  <procedure xml:id="pro-ha-geo-setup-booth-yast">
   <title>booth mit YaST einrichten</title>
   <step>
    <para>
     Melden Sie sich als <systemitem class="username">root</systemitem> oder gleichwertiger Benutzer bei einem Cluster-Knoten an.
    </para>
   </step>
   <step>
    <para>
     Starten Sie das YaST-Modul <guimenu>GeoCluster</guimenu>.
    </para>
   </step>
   <step>
    <para>
     Wählen Sie die Option zum <guimenu>Bearbeiten</guimenu> einer vorhandenen booth-Konfigurationsdatei aus oder klicken Sie auf <guimenu>Hinzufügen</guimenu>, um eine neue booth-Konfigurationsdatei zu erstellen:
    </para>
    <substeps performance="required">
     <step xml:id="step-ha-booth-conf-params">
      <para>
       Konfigurieren Sie im daraufhin angezeigten Bildschirm die folgenden Parameter:
      </para>
      <itemizedlist>
       <listitem>
        <formalpara>
         <title>Konfigurationsdatei</title>
         <para>
          Der Name der booth-Konfigurationsdatei. YaST schlägt standardmäßig <literal>booth</literal> vor. Dies bewirkt, dass die booth-Konfiguration in <filename>/etc/booth/booth.conf</filename> geschrieben wird. Ändern Sie diesen Wert nur, wenn Sie mehrere booth-Instanzen für verschiedene GeoCluster einrichten müssen, wie in <xref linkend="sec-ha-geo-booth-multi"/> beschrieben.
         </para>
        </formalpara>
       </listitem>
       <listitem>
        <formalpara>
         <title>Transport</title>
         <para>
          Das für die Kommunikation zwischen den Sites verwendete Transportprotokoll. Nur UDP wird unterstützt, doch in Zukunft werden weitere Transportschichten hinzukommen. Siehe auch <xref linkend="ex-ha-booth-conf-default"/>, Position<xref linkend="co-ha-geo-booth-config-transport"/>.
         </para>
        </formalpara>
       </listitem>
       <listitem>
        <formalpara>
         <title>Anschluss</title>
         <para>
          Der für die Kommunikation zwischen den booth-Instanzen auf den einzelnen Sites zu verwendende Port. Siehe auch <xref linkend="ex-ha-booth-conf-default"/>, Position<xref linkend="co-ha-geo-booth-config-port"/>.
         </para>
        </formalpara>
       </listitem>
       <listitem>
        <formalpara>
         <title>Vermittler</title>
         <para>
           Die IP-Adresse des Rechners, der als Vermittler verwendet werden soll. Siehe auch <xref linkend="ex-ha-booth-conf-default"/>, Position<xref linkend="co-ha-geo-booth-config-arbitrator"/>.
         </para>
        </formalpara>
        <para>
         Klicken Sie auf <guimenu>Hinzufügen</guimenu>, um einen <guimenu>Vermittler</guimenu> anzugeben. Geben Sie im daraufhin geöffneten Dialogfeld die IP-Adresse des Vermittlers ein und klicken Sie auf <guimenu>OK</guimenu>.
        </para>
       </listitem>
       <listitem>
        <formalpara>
         <title>Site</title>
         <para>
          Die für <systemitem class="daemon">boothd</systemitem> auf einer Site verwendete IP-Adresse. Siehe auch <xref linkend="ex-ha-booth-conf-default"/>, Position<xref linkend="co-ha-geo-booth-config-site"/>.
         </para>
        </formalpara>
        <para>
         Klicken Sie auf <guimenu>Hinzufügen</guimenu>, um eine <guimenu>Site</guimenu> des GeoClusters anzugeben. Geben Sie im daraufhin geöffneten Dialogfeld die IP-Adresse einer Site ein und klicken Sie auf <guimenu>OK</guimenu>.
        </para>
       </listitem>
       <listitem>
        <formalpara>
         <title>Ticket</title>
         <para>
          Das Ticket, das von booth verwaltet werden soll. Siehe auch <xref linkend="ex-ha-booth-conf-default"/>, Position<xref linkend="co-ha-geo-booth-config-ticket"/>.
         </para>
        </formalpara>
        <para>
         Klicken Sie auf <guimenu>Hinzufügen</guimenu>, um ein <guimenu>Ticket</guimenu> anzugeben. Geben Sie im daraufhin geöffneten Dialogfeld einen eindeutigen Namen für das <guimenu>Ticket</guimenu> an. Wenn Sie mehrere Tickets mit denselben Parametern und Werten definieren müssen, können Sie sich die Konfiguration erleichtern, indem Sie eine <quote>Ticketvorlage</quote> erstellen, in der die Standardparameter und -werte für alle Tickets angegeben sind. Verwenden Sie dazu <literal>__default__</literal> als Name für das <guimenu>Ticket</guimenu>.
        </para>
       </listitem>
       <listitem>
        
        <formalpara>
         <title>Authentifizierung </title>
         <para>Um die Authentifizierung für booth zu aktivieren, klicken Sie auf <guimenu>Authentifizierung</guimenu>. Aktivieren Sie im daraufhin geöffneten Dialogfeld die Option <guimenu>Sicherheitsauthentifizierung aktivieren</guimenu>. Wenn bereits ein Schlüssel vorhanden ist, geben Sie den Pfad und den Dateinamen im Feld <guimenu>Authentifizierungsdatei</guimenu> an. Zum Generieren einer Schlüsseldatei für einen neuen GeoCluster klicken Sie auf <guimenu>Authentifizierungsschlüsseldatei erzeugen</guimenu>. Der Schlüssel wird erstellt und an den im Feld <guimenu>Authentifizierungsdatei</guimenu> angegebenen Ort geschrieben.</para>
        </formalpara>
        <para>
         Zusätzlich können Sie optionale Parameter für das Ticket angeben. Einen Überblick finden Sie in <xref linkend="ex-ha-booth-conf-default"/>, Positionen <xref linkend="co-ha-geo-booth-config-expiry"/> bis <xref linkend="co-ha-geo-booth-config-acquire-after"/>.
        </para>
        <para>
         Klicken Sie auf <guimenu>OK</guimenu>, um die Änderungen zu bestätigen.
        </para>
       </listitem>
      </itemizedlist>
      <figure xml:id="fig-yast2-ha-geo-booth">
       <title>Beispiel für eine Ticketabhängigkeit</title>
       <mediaobject>
        <imageobject role="fo">
         <imagedata fileref="yast2_geo_cluster_booth.png" width="80%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
         <imagedata fileref="yast2_geo_cluster_booth.png" width="50%" format="PNG"/>
        </imageobject>
       </mediaobject>
      </figure>
     </step>
     <step>
      <para>
       Klicken Sie auf <guimenu>OK</guimenu>, um den aktuellen booth-Konfigurationsbildschirm zu schließen. In YaST wird der Name der definierten booth-Konfigurationsdatei angezeigt.
      </para>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     Bevor Sie das YaST-Modul schließen, wechseln Sie zur Kategorie <guimenu>Konfiguration der Firewall</guimenu>.
    </para>
   </step>
   <step>
    <para>
     Um den für booth konfigurierten Port zu öffnen, aktivieren Sie <guimenu>Firewall-Port öffnen</guimenu>.
    </para>
    <important>
     <title>Firewall-Einstellung nur für lokalen Rechner</title>
     <para>
      Die Firewall-Einstellung wird nur auf dem aktuellen Rechner angewendet. Damit werden die UDP-/TCP-Ports für alle Ports geöffnet, die in <filename>/etc/booth/booth.conf</filename> oder anderen booth-Konfigurationsdateien angegeben sind (siehe <xref linkend="sec-ha-geo-booth-multi"/>).
     </para>
     <para>
      Öffnen Sie die betreffenden Ports unbedingt auch auf allen anderen Cluster-Knoten und Vermittlern Ihrer GeoCluster-Einrichtung. Dies können Sie entweder manuell durchführen oder die folgenden Dateien mit Csync2 synchronisieren:
     </para>
     <itemizedlist>
      <listitem>
       <para>
        <filename>/etc/sysconfig/SuSEfirewall2</filename>
       </para>
      </listitem>
      <listitem>
       <para>
        <filename>/etc/sysconfig/SuSEfirewall2.d/services/booth</filename>
       </para>
      </listitem>
     </itemizedlist>
    </important>
   </step>
   <step>
    <para>
     Klicken Sie auf <guimenu>Fertig stellen</guimenu>, um alle Einstellungen zu bestätigen und das YaST-Modul zu schließen. Je nach dem in <xref linkend="step-ha-booth-conf-params"/> angegebenen <replaceable>NAMEN</replaceable> der <guimenu>Konfigurationsdatei</guimenu> wird die Konfiguration in <filename>/etc/booth/<replaceable>NAME</replaceable>.conf</filename> geschrieben.
    </para>
   </step>
  </procedure>
 </sect2>

 <sect2 xml:id="sec-ha-geo-booth-multi">
  <title>booth-Einrichtung für mehrere Mandanten</title>

  <para>
    Für Einrichtungen, die mehrere GeoCluster enthalten, kann derselbe Vermittler <quote>gemeinsam genutzt</quote> werden (ab <phrase role="productname"><phrase os="sles">SUSE Linux Enterprise High Availability Extension</phrase></phrase> 12). Durch Bereitstellen mehrerer booth-Konfigurationsdateien können Sie mehrere booth-Instanzen auf demselben Vermittler starten, wobei jede booth-Instanz auf einem anderen Port ausgeführt wird. Auf diese Weise können Sie <emphasis>einen</emphasis> Rechner als Vermittler für <emphasis>verschiedene</emphasis> GeoCluster verwenden.
  </para>
  <para>
   Angenommen, Sie verfügen über zwei GeoCluster, einen in der Region EMEA (Europa, Nahost und Afrika) und einen in der Region Asien-Pazifik (APAC).
  </para>
  <para>
   Wenn für beide GeoCluster derselbe Vermittler verwendet werden soll, erstellen Sie zwei Konfigurationsdateien im Verzeichnis <filename>/etc/booth</filename>: <filename>/etc/booth/emea.conf</filename> und <filename>/etc/booth/apac.conf</filename>. Die beiden Dateien müssen sich bei den folgenden Parametern minimal unterscheiden:
  </para>
  <itemizedlist>
   <listitem>
    <para>
     Bei dem Port, der für die Kommunikation der booth-Instanzen verwendet wird
    </para>
   </listitem>
   <listitem>
    <para>
     Bei den Sites, die zu den unterschiedlichen GeoClustern gehören, für die der Vermittler verwendet wird
    </para>
   </listitem>
  </itemizedlist>
  <example xml:id="ex-ha-conf-booth-multi-1">
   <title><filename>/etc/booth/apac.conf</filename></title>
<screen><?dbsuse-fo font-size="0.75em"?>

transport = UDP <xref linkend="co-ha-geo-booth-config-transport" xrefstyle="select:label nopage"/>
port = 9133 <xref linkend="co-ha-geo-booth-config-port" xrefstyle="select:label nopage"/>
arbitrator = 147.2.207.14 <xref linkend="co-ha-geo-booth-config-arbitrator" xrefstyle="select:label nopage"/>
site = 192.168.2.254 <xref linkend="co-ha-geo-booth-config-site" xrefstyle="select:label nopage"/>
site = 192.168.1.112 <xref linkend="co-ha-geo-booth-config-site" xrefstyle="select:label nopage"/>
authfile = /etc/booth/authkey-apac <xref linkend="co-ha-geo-booth-config-auth" xrefstyle="select:label nopage"/>
ticket ="tkt-db-apac-intern" <xref linkend="co-ha-geo-booth-config-ticket"/>
     timeout = 10 
     retries = 5 
     renewal-freq = 60 
     before-acquire-handler<xref linkend="co-ha-geo-booth-config-handler" xrefstyle="select:label nopage"/> = /usr/share/booth/service-runnable<xref linkend="co-ha-geo-booth-config-script" xrefstyle="select:label nopage"/> db-apac-intern <xref linkend="co-ha-geo-booth-config-rsc" xrefstyle="select:label nopage"/> 
ticket = "tkt-db-apac-cust" <xref linkend="co-ha-geo-booth-config-ticket" xrefstyle="select:label nopage"/>
     timeout = 10 
     retries = 5 
     renewal-freq = 60 
     before-acquire-handler = /usr/share/booth/service-runnable db-apac-cust</screen>
  </example>
  <example xml:id="ex-ha-conf-booth-multi-2">
   <title><filename>/etc/booth/emea.conf</filename></title>
<screen><?dbsuse-fo font-size="0.75em"?>

transport = UDP <xref linkend="co-ha-geo-booth-config-transport" xrefstyle="select:label nopage"/>
port = 9150 <xref linkend="co-ha-geo-booth-config-port" xrefstyle="select:label nopage"/>
arbitrator = 147.2.207.14 <xref linkend="co-ha-geo-booth-config-arbitrator" xrefstyle="select:label nopage"/>
site = 192.168.201.151 <xref linkend="co-ha-geo-booth-config-site" xrefstyle="select:label nopage"/>
site = 192.168.202.151 <xref linkend="co-ha-geo-booth-config-site" xrefstyle="select:label nopage"/>
authfile = /etc/booth/authkey-emea <xref linkend="co-ha-geo-booth-config-auth" xrefstyle="select:label nopage"/>
ticket = "tkt-sap-crm" <xref linkend="co-ha-geo-booth-config-ticket"/>
     expire = 900 
     renewal-freq = 60 
     before-acquire-handler<xref linkend="co-ha-geo-booth-config-handler" xrefstyle="select:label nopage"/> = /usr/share/booth/service-runnable<xref linkend="co-ha-geo-booth-config-script" xrefstyle="select:label nopage"/> sap-crm <xref linkend="co-ha-geo-booth-config-rsc" xrefstyle="select:label nopage"/>
ticket = "tkt-sap-prod" <xref linkend="co-ha-geo-booth-config-ticket" xrefstyle="select:label nopage"/>
     expire = 600 
     renewal-freq = 60 
     before-acquire-handler = /usr/share/booth/service-runnable sap-prod</screen>
  </example>
  <calloutlist>
   <callout arearefs="co-ha-geo-booth-config-transport">
    <para>
     Das für die Kommunikation zwischen den Sites verwendete Transportprotokoll. Nur UDP wird unterstützt, doch in Zukunft werden weitere Transportschichten hinzukommen. Zurzeit kann dieser Parameter daher ausgelassen werden.
    </para>
   </callout>
   <callout arearefs="co-ha-geo-booth-config-port">
    <para>
     Der für die Kommunikation zwischen den booth-Instanzen auf den einzelnen Sites zu verwendende Port. In den Konfigurationsdateien werden verschiedene Ports verwendet, damit mehrere booth-Instanzen auf demselben Vermittler gestartet werden können.
    </para>
   </callout>
   <callout arearefs="co-ha-geo-booth-config-arbitrator">
    <para>
      Die IP-Adresse des Rechners, der als Vermittler verwendet werden soll. In den vorstehenden Beispielen wird derselbe Vermittler für verschiedene GeoCluster verwendet.
    </para>
   </callout>
   <callout arearefs="co-ha-geo-booth-config-site">
    <para>
     Die für <systemitem class="daemon">boothd</systemitem> auf einer Site verwendete IP-Adresse. Die in den beiden booth-Konfigurationsdateien definierten Sites unterscheiden sich voneinander, da sie zu zwei verschiedenen GeoClustern gehören.
    </para>
   </callout>
   <callout arearefs="co-ha-geo-booth-config-auth">
    <para>
     Optionaler Parameter. Aktiviert die booth-Authentifizierung für Clients und Server auf Basis eines gemeinsamen Schlüssels. Dieser Parameter gibt den Pfad zu der Schlüsseldatei an. Verwenden Sie für unterschiedliche Mandanten unterschiedliche Schlüsseldateien.
    </para>
    <itemizedlist>
      <title>Wichtige Anforderungen</title>
      <listitem>
       <para>Bei dem Schlüssel kann es sich um eine Binär- oder eine Textdatei handeln.</para>
       <para>Beim Textformat werden die folgenden Zeichen ignoriert: voran- und nachgestelltes Leerzeichen, Zeilenendemarken.</para>
      </listitem>
      <listitem>
       <para>Der Schlüssel muss zwischen 8 und 64 Zeichen lang sein.</para>
      </listitem>
      <listitem>
        <para>Der Schlüssel muss Eigentum des Benutzers <systemitem class="username">hacluster</systemitem> und der Gruppe <systemitem class="groupname">haclient</systemitem> sein.
        </para>
      </listitem>
      <listitem>
       <para>Der Schlüssel darf nur für den Eigentümer der Datei lesbar sein.</para>
      </listitem>
     </itemizedlist>
   </callout>
   <callout arearefs="co-ha-geo-booth-config-ticket">
    <para>
     Das Ticket, das von booth verwaltet werden soll. Theoretisch können in verschiedenen booth-Konfigurationsdateien dieselben Ticketnamen definiert werden. Es entsteht dann kein Konflikt zwischen den Tickets, da sie zu verschiedenen GeoClustern gehören, die von verschiedenen booth-Instanzen verwaltet werden. Es wird jedoch (für einen besseren Überblick) empfohlen, für jeden GeoCluster eindeutige Ticketnamen zu verwenden, wie in den obigen Beispielen gezeigt.
    </para>
   </callout>
   <callout arearefs="co-ha-geo-booth-config-handler">
    <para>
     Optionaler Parameter. Wenn dieser festgelegt wird, wird das angegebene Kommando aufgerufen, bevor <systemitem class="daemon">boothd</systemitem> versucht, ein Ticket zu beziehen oder zu erneuern. Bei einem anderen Beendigungscode als <literal>0</literal> gibt <systemitem class="daemon">boothd</systemitem> das Ticket frei.
    </para>
   </callout>
   <callout arearefs="co-ha-geo-booth-config-script">
    <para>
     Das Skript <filename>service-runnable</filename>, auf das hier Bezug genommen wird, ist als Beispiel im Produkt enthalten. Es handelt sich dabei um ein einfaches Skript, das auf <command>crm_simulate</command> basiert. Sie können damit testen, ob eine bestimmte Cluster-Ressource auf der aktuellen Cluster-Site ausgeführt werden <emphasis>kann</emphasis>. Es wird also geprüft, ob der Zustand des Clusters die Ausführung der Ressource zulässt (ob alle Ressourcenabhängigkeiten erfüllt sind, ob die Cluster-Partition ein Quorum aufweist, ob keine veränderten Knoten (Dirty-Knoten) vorhanden sind usw.). Wenn z. B. ein Service in der Abhängigkeitskette auf allen verfügbaren Knoten eine Fehleranzahl von <literal>INFINITY</literal> aufweist, kann der Service auf dieser Site nicht ausgeführt werden. In diesem Fall ist die Beanspruchung des Tickets sinnlos.
    </para>
   </callout>
   <callout arearefs="co-ha-geo-booth-config-rsc">
    <para>
     Die von der Vor-Erfassung-Routine (<literal>before-acquire-handler</literal>) zu testende Ressource (in diesem Fall mit dem Skript <filename>service-runnable</filename>). Sie müssen Bezug auf die Ressource nehmen, die durch das betreffende Ticket geschützt ist.
    </para>
   </callout>
  </calloutlist>
  <procedure>
   <title>Denselben Vermittler für verschiedene GeoCluster verwenden</title>
   <step>
    <para>
     Erstellen Sie verschiedene booth-Konfigurationsdateien in <filename>/etc/booth</filename>, wie in <xref linkend="ex-ha-conf-booth-multi-1"/> und <xref linkend="ex-ha-conf-booth-multi-2"/> dargestellt. Diesen Schritt können Sie entweder manuell oder mit YaST ausführen, wie in <xref linkend="pro-ha-geo-setup-booth-yast"/> beschrieben.
    </para>
   </step>
   <step>
    <para>
     Öffnen Sie auf dem Vermittler die Ports, die in einer der booth-Konfigurationsdateien in <filename>/etc/booth</filename> definiert sind.
    </para>
   </step>
   <step>
    <para>
     Öffnen Sie auf den Knoten, die zu den einzelnen GeoClustern gehören, für die der Vermittler verwendet wird, den Port für die jeweilige booth-Instanz.
    </para>
   </step>
   <step>
    <para>
     Synchronisieren Sie die betreffenden booth-Konfigurationsdateien zwischen allen Cluster-Knoten und Vermittlern, für die dieselbe booth-Konfiguration verwendet wird. Weitere Informationen finden Sie in <xref linkend="sec-ha-geo-booth-sync"/>.
    </para>
   </step>
   <step>
    <para>
     Starten Sie auf dem Vermittler die einzelnen booth-Instanzen, wie unter <xref linkend="vle-ha-geo-setup-booth-service-arbitrator"/> für Einrichtungen mit mehreren Mandanten beschrieben.
    </para>
   </step>
   <step>
    <para>
     Starten Sie auf den einzelnen GeoClustern den booth-Service, wie unter <xref linkend="vle-ha-geo-setup-booth-service-sites"/> beschrieben.
    </para>
   </step>
  </procedure>
 </sect2>

 <sect2 xml:id="sec-ha-geo-booth-sync">
  <title>Synchronisieren der booth-Konfiguration zwischen allen Sites und Vermittlern</title>
  <note>
   <title>Verwenden derselben booth-Konfiguration auf allen Sites und Vermittlern</title>
   <para>
    Damit booth ordnungsgemäß arbeitet, muss für alle Cluster-Knoten und Vermittler in einem GeoCluster dieselbe booth-Konfiguration verwendet werden.
   </para>
   <para>
    Zum Synchronisieren der booth-Konfiguration können Sie Csync2 verwenden. Weitere Informationen hierzu finden Sie in <xref linkend="sec-ha-geo-booth-sync-csync2-setup"/> und <xref linkend="sec-ha-geo-booth-sync-csync2-start"/>.
   </para>
   <para>
    Wenn sich eine booth-Konfiguration ändert, müssen Sie die Konfigurationsdateien auf allen beteiligten Rechnern entsprechend aktualisieren und die booth-Services neu starten, wie in <xref linkend="sec-ha-geo-setup-booth-reconfig"/> beschrieben.
   </para>
  </note>
 </sect2>

 <sect2 xml:id="sec-ha-geo-setup-booth-service">
  <title>Aktivieren und Starten der booth-Services</title>
  <variablelist>
   <varlistentry xml:id="vle-ha-geo-setup-booth-service-sites">
    <term>Starten der booth-Services auf Cluster-Sites</term>
    <listitem>
     <para>
      Der booth-Service für jede Cluster-Site wird von der in <xref linkend="pro-ha-geo-setup-rsc-boothd"/> konfigurierten booth-Ressourcengruppe verwaltet. Um eine Instanz des booth-Service pro Site zu starten, starten Sie die entsprechende booth-Ressourcengruppe auf den einzelnen Cluster-Sites.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="vle-ha-geo-setup-booth-service-arbitrator">
    <term>Starten der booth-Services auf Vermittlern</term>

    <listitem>
     <para>
      Ab SUSE Linux Enterprise 12 werden booth-Vermittler mit systemd verwaltet. Die Unit-Datei heißt <filename>booth@.service</filename>. Das Symbol <literal>@</literal> bedeutet, dass die Möglichkeit besteht, den Service mit einem Parameter auszuführen. Dieser Parameter ist in diesem Fall der Name der Konfigurationsdatei.
     </para>
     <para>
      Zum <emphasis>Aktivieren</emphasis> des booth-Service auf einem Vermittler verwenden Sie das folgende Kommando:
     </para>
<screen><prompt role="root">root # </prompt><command>systemctl</command> enable booth@booth</screen>
     <para>
      Nach dem Aktivieren des Service über die Kommandozeile kann die YaST-Dienste-Verwaltung zum Verwalten des Service verwendet werden, solange dieser nicht deaktiviert wird. In letzterem Fall wird der Service beim nächsten Start von systemd in der Serviceliste in YaST nicht mehr angezeigt.
     </para>
     <para>
      Das Kommando zum <emphasis>Starten</emphasis> des booth-Service hingegen hängt von der booth-Einrichtung ab:
     </para>
     <itemizedlist>
      <listitem>
       <para>
        Wenn Sie die in <xref linkend="sec-ha-geo-booth-default"/> beschriebene Standardeinrichtung verwenden, ist nur <filename>/etc/booth/booth.conf</filename> konfiguriert. In diesem Fall melden Sie sich bei den einzelnen Vermittlern an und verwenden das folgende Kommando :
       </para>
<screen><prompt role="root">root # </prompt><command>systemctl</command> start booth@booth</screen>
      </listitem>
      <listitem>
       <para>
        Wenn Sie booth im Modus mit mehreren Mandanten ausführen, wie in <xref linkend="sec-ha-geo-booth-multi"/> beschrieben, haben Sie in <filename>/etc/booth</filename> mehrere booth-Konfigurationsdateien konfiguriert. Um die Services für die einzelnen booth-Instanzen zu starten, verwenden Sie <command>systemctl start booth@</command> <replaceable>NAME</replaceable>, wobei <replaceable>NAME</replaceable> für den Namen der jeweiligen Konfigurationsdatei <filename>/etc/booth/<replaceable>NAME</replaceable>.conf</filename> steht.
       </para>
       <para>
        Wenn beispielsweise die booth-Konfigurationsdateien <filename>/etc/booth/emea.conf</filename> und <filename>/etc/booth/apac.conf</filename> vorhanden sind, melden Sie sich beim Vermittler an und führen Sie folgende Kommandos aus:
       </para>
<screen><prompt role="root">root # </prompt><command>systemctl</command> start booth@emea
<prompt role="root">root # </prompt><command>systemctl</command> start booth@apac</screen>
       <para>

       </para>
      </listitem>
     </itemizedlist>
     <para>
      Damit wird der booth-Service im Vermittlermodus gestartet. Er kann mit allen anderen booth-Daemons kommunizieren, aber im Gegensatz zu den auf den Cluster-Sites ausgeführten booth-Daemons kann ihm kein Ticket gewährt werden. booth-Vermittler nehmen nur an Wahlen teil. Andernfalls befinden sie sich im Ruhezustand.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect2>

 <sect2 xml:id="sec-ha-geo-setup-booth-reconfig">
  <title>Neukonfigurieren von booth während der Ausführung</title>

  <para>
   Wenn Sie die booth-Konfiguration ändern müssen, während die booth-Services bereits ausgeführt werden, führen Sie die folgenden Schritte aus:
  </para>
  <procedure>
   <step>
    <para>
     Passen Sie die booth-Konfigurationsdateien nach Bedarf an.
    </para>
   </step>
   <step>
    <para>
     Synchronisieren Sie die aktualisierten booth-Konfigurationsdateien mit allen Cluster-Knoten und Vermittlern, die Teil des GeoClusters sind. Weitere Informationen finden Sie in <xref linkend="sec-ha-geo-sync"/>.
    </para>
   </step>
   <step>

    <para>
     Starten Sie die booth-Services auf den Vermittlern und Cluster-Sites neu, wie in <xref linkend="sec-ha-geo-setup-booth-service"/> beschrieben. Auf Tickets, die Sites bereits gewährt wurden, hat dies keine Auswirkungen.
    </para>
   </step>
  </procedure>
 </sect2>
</sect1>
